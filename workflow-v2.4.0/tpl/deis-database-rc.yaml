apiVersion: v1
kind: ReplicationController
metadata:
  name: deis-database
  namespace: deis
  labels:
    heritage: deis
  annotations:
    component.deis.io/version: {{env "DATABASE_GIT_TAG" | default .database.dockerTag}}
spec:
  replicas: 1
  selector:
    app: deis-database
  template:
    metadata:
      labels:
        app: deis-database
    spec:
      serviceAccount: deis-database
      containers:
        - name: deis-database
          image: quay.io/{{.database.org}}/postgres:{{env "DATABASE_GIT_TAG" | default .database.dockerTag}}
          imagePullPolicy: {{.database.pullPolicy}}
          ports:
            - containerPort: 5432
          env:
            - name: DATABASE_STORAGE
              value: "{{ or (env "STORAGE_TYPE") (.storage)}}"
{{- if or (.database.limits_cpu) (.database.limits_memory)}}
          resources:
            limits:
{{- if (.database.limits_cpu) }}
              cpu: {{.database.limits_cpu}}
{{- end}}
{{- if (.database.limits_memory) }}
              memory: {{.database.limits_memory}}
{{- end}}
{{- end}}
          readinessProbe:
            exec:
              command:
                - is_running
            initialDelaySeconds: 30
            timeoutSeconds: 1
          volumeMounts:
            - name: database-creds
              mountPath: /var/run/secrets/deis/database/creds
            - name: objectstore-creds
              mountPath: /var/run/secrets/deis/objectstore/creds
      volumes:
        - name: database-creds
          secret:
            secretName: database-creds
        - name: objectstore-creds
          secret:
            secretName: objectstorage-keyfile
